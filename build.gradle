apply plugin: 'java'
apply plugin: 'application'


repositories {
    jcenter()
}

mainClassName = "SampleAxisProject"

ext {
    webServiceClass = "sample.webservice.server.StockService"
    generatedDir = "${buildDir}/generated"
}

dependencies {
    compile "org.apache.axis2:axis2:$axisVersion"
    compile "org.apache.axis2:axis2-java2wsdl:$axisVersion"
    compile "org.apache.axis2:axis2-jibx:$axisVersion"
}

sourceSets {
    // Define a new source set for generated client-side code.
    generated {
        java {
            srcDirs = ["${generatedDir}/src"]
        }
    }

    // Add the source set source directories source directories for main.
    main {
        java {
            srcDirs += sourceSets.generated.java.srcDirs
        }
    }
}


/**
 * Create the directory used to hold generated content.
 */
task createGeneratedDirectory(description: "Creates a directory for generated content") << {
    File generatedDirectory = new File("${generatedDir}");
    if (!generatedDirectory.exists()) {
        generatedDirectory.mkdirs();
    }
}

/**
 * Generate client code stubs that can be used to invoke operations on the Axis webservice.
 */
task generateClientCode(type: JavaExec,
        description: 'Generates Java code that can be used as a client of the Axis service.',
        group: 'build',
        dependsOn: 'createGeneratedDirectory') {
    main = 'org.apache.axis2.wsdl.WSDL2Java'
    args "-uri", "${generatedDir}/StockService.wsdl", "-p", "sample.webservice.client", "-d", "jibx", "-s",
            "-uw", "-o", "${generatedDir}", "-or"
    maxHeapSize = '100M'
    classpath = sourceSets.main.compileClasspath
}

compileJava.dependsOn('generateClientCode')